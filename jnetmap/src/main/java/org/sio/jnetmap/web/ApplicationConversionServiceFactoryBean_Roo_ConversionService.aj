// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.sio.jnetmap.web;

import org.sio.jnetmap.domain.Band;
import org.sio.jnetmap.domain.Building;
import org.sio.jnetmap.domain.Dispatcher;
import org.sio.jnetmap.domain.NetModule;
import org.sio.jnetmap.domain.NetSwitch;
import org.sio.jnetmap.domain.Outlet;
import org.sio.jnetmap.domain.Port;
import org.sio.jnetmap.domain.Room;
import org.sio.jnetmap.domain.Sonde;
import org.sio.jnetmap.domain.Vlan;
import org.sio.jnetmap.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Band, String> ApplicationConversionServiceFactoryBean.getBandToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sio.jnetmap.domain.Band, java.lang.String>() {
            public String convert(Band band) {
                return new StringBuilder().append(band.getNumBand()).toString();
            }
        };
    }
    
    public Converter<Long, Band> ApplicationConversionServiceFactoryBean.getIdToBandConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.sio.jnetmap.domain.Band>() {
            public org.sio.jnetmap.domain.Band convert(java.lang.Long id) {
                return Band.findBand(id);
            }
        };
    }
    
    public Converter<String, Band> ApplicationConversionServiceFactoryBean.getStringToBandConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sio.jnetmap.domain.Band>() {
            public org.sio.jnetmap.domain.Band convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Band.class);
            }
        };
    }
    
    public Converter<Building, String> ApplicationConversionServiceFactoryBean.getBuildingToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sio.jnetmap.domain.Building, java.lang.String>() {
            public String convert(Building building) {
                return new StringBuilder().append(building.getNameBuilding()).toString();
            }
        };
    }
    
    public Converter<Long, Building> ApplicationConversionServiceFactoryBean.getIdToBuildingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.sio.jnetmap.domain.Building>() {
            public org.sio.jnetmap.domain.Building convert(java.lang.Long id) {
                return Building.findBuilding(id);
            }
        };
    }
    
    public Converter<String, Building> ApplicationConversionServiceFactoryBean.getStringToBuildingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sio.jnetmap.domain.Building>() {
            public org.sio.jnetmap.domain.Building convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Building.class);
            }
        };
    }
    
    public Converter<Dispatcher, String> ApplicationConversionServiceFactoryBean.getDispatcherToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sio.jnetmap.domain.Dispatcher, java.lang.String>() {
            public String convert(Dispatcher dispatcher) {
                return new StringBuilder().append(dispatcher.getNameDispatcher()).toString();
            }
        };
    }
    
    public Converter<Long, Dispatcher> ApplicationConversionServiceFactoryBean.getIdToDispatcherConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.sio.jnetmap.domain.Dispatcher>() {
            public org.sio.jnetmap.domain.Dispatcher convert(java.lang.Long id) {
                return Dispatcher.findDispatcher(id);
            }
        };
    }
    
    public Converter<String, Dispatcher> ApplicationConversionServiceFactoryBean.getStringToDispatcherConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sio.jnetmap.domain.Dispatcher>() {
            public org.sio.jnetmap.domain.Dispatcher convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Dispatcher.class);
            }
        };
    }
    
    public Converter<NetModule, String> ApplicationConversionServiceFactoryBean.getNetModuleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sio.jnetmap.domain.NetModule, java.lang.String>() {
            public String convert(NetModule netModule) {
                return new StringBuilder().append(netModule.getNumNetModule()).toString();
            }
        };
    }
    
    public Converter<Long, NetModule> ApplicationConversionServiceFactoryBean.getIdToNetModuleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.sio.jnetmap.domain.NetModule>() {
            public org.sio.jnetmap.domain.NetModule convert(java.lang.Long id) {
                return NetModule.findNetModule(id);
            }
        };
    }
    
    public Converter<String, NetModule> ApplicationConversionServiceFactoryBean.getStringToNetModuleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sio.jnetmap.domain.NetModule>() {
            public org.sio.jnetmap.domain.NetModule convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), NetModule.class);
            }
        };
    }
    
    public Converter<NetSwitch, String> ApplicationConversionServiceFactoryBean.getNetSwitchToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sio.jnetmap.domain.NetSwitch, java.lang.String>() {
            public String convert(NetSwitch netSwitch) {
                return new StringBuilder().append(netSwitch.getIpNetSwitch()).append(' ').append(netSwitch.getNameNetSwitch()).toString();
            }
        };
    }
    
    public Converter<Long, NetSwitch> ApplicationConversionServiceFactoryBean.getIdToNetSwitchConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.sio.jnetmap.domain.NetSwitch>() {
            public org.sio.jnetmap.domain.NetSwitch convert(java.lang.Long id) {
                return NetSwitch.findNetSwitch(id);
            }
        };
    }
    
    public Converter<String, NetSwitch> ApplicationConversionServiceFactoryBean.getStringToNetSwitchConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sio.jnetmap.domain.NetSwitch>() {
            public org.sio.jnetmap.domain.NetSwitch convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), NetSwitch.class);
            }
        };
    }
    
    public Converter<Outlet, String> ApplicationConversionServiceFactoryBean.getOutletToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sio.jnetmap.domain.Outlet, java.lang.String>() {
            public String convert(Outlet outlet) {
                return new StringBuilder().append(outlet.getNumOutlet()).append(' ').append(outlet.getPortOutlet()).toString();
            }
        };
    }
    
    public Converter<Long, Outlet> ApplicationConversionServiceFactoryBean.getIdToOutletConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.sio.jnetmap.domain.Outlet>() {
            public org.sio.jnetmap.domain.Outlet convert(java.lang.Long id) {
                return Outlet.findOutlet(id);
            }
        };
    }
    
    public Converter<String, Outlet> ApplicationConversionServiceFactoryBean.getStringToOutletConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sio.jnetmap.domain.Outlet>() {
            public org.sio.jnetmap.domain.Outlet convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Outlet.class);
            }
        };
    }
    
    public Converter<Port, String> ApplicationConversionServiceFactoryBean.getPortToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sio.jnetmap.domain.Port, java.lang.String>() {
            public String convert(Port port) {
                return new StringBuilder().append(port.getNumPort()).toString();
            }
        };
    }
    
    public Converter<Long, Port> ApplicationConversionServiceFactoryBean.getIdToPortConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.sio.jnetmap.domain.Port>() {
            public org.sio.jnetmap.domain.Port convert(java.lang.Long id) {
                return Port.findPort(id);
            }
        };
    }
    
    public Converter<String, Port> ApplicationConversionServiceFactoryBean.getStringToPortConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sio.jnetmap.domain.Port>() {
            public org.sio.jnetmap.domain.Port convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Port.class);
            }
        };
    }
    
    public Converter<Room, String> ApplicationConversionServiceFactoryBean.getRoomToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sio.jnetmap.domain.Room, java.lang.String>() {
            public String convert(Room room) {
                return new StringBuilder().append(room.getNameRoom()).toString();
            }
        };
    }
    
    public Converter<Long, Room> ApplicationConversionServiceFactoryBean.getIdToRoomConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.sio.jnetmap.domain.Room>() {
            public org.sio.jnetmap.domain.Room convert(java.lang.Long id) {
                return Room.findRoom(id);
            }
        };
    }
    
    public Converter<String, Room> ApplicationConversionServiceFactoryBean.getStringToRoomConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sio.jnetmap.domain.Room>() {
            public org.sio.jnetmap.domain.Room convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Room.class);
            }
        };
    }
    
    public Converter<Sonde, String> ApplicationConversionServiceFactoryBean.getSondeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sio.jnetmap.domain.Sonde, java.lang.String>() {
            public String convert(Sonde sonde) {
                return new StringBuilder().append(sonde.getMacSonde()).append(' ').append(sonde.getNumSonde()).toString();
            }
        };
    }
    
    public Converter<Long, Sonde> ApplicationConversionServiceFactoryBean.getIdToSondeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.sio.jnetmap.domain.Sonde>() {
            public org.sio.jnetmap.domain.Sonde convert(java.lang.Long id) {
                return Sonde.findSonde(id);
            }
        };
    }
    
    public Converter<String, Sonde> ApplicationConversionServiceFactoryBean.getStringToSondeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sio.jnetmap.domain.Sonde>() {
            public org.sio.jnetmap.domain.Sonde convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Sonde.class);
            }
        };
    }
    
    public Converter<Vlan, String> ApplicationConversionServiceFactoryBean.getVlanToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sio.jnetmap.domain.Vlan, java.lang.String>() {
            public String convert(Vlan vlan) {
                return new StringBuilder().append(vlan.getNumVlan()).append(' ').append(vlan.getNameVlan()).toString();
            }
        };
    }
    
    public Converter<Long, Vlan> ApplicationConversionServiceFactoryBean.getIdToVlanConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.sio.jnetmap.domain.Vlan>() {
            public org.sio.jnetmap.domain.Vlan convert(java.lang.Long id) {
                return Vlan.findVlan(id);
            }
        };
    }
    
    public Converter<String, Vlan> ApplicationConversionServiceFactoryBean.getStringToVlanConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sio.jnetmap.domain.Vlan>() {
            public org.sio.jnetmap.domain.Vlan convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Vlan.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getBandToStringConverter());
        registry.addConverter(getIdToBandConverter());
        registry.addConverter(getStringToBandConverter());
        registry.addConverter(getBuildingToStringConverter());
        registry.addConverter(getIdToBuildingConverter());
        registry.addConverter(getStringToBuildingConverter());
        registry.addConverter(getDispatcherToStringConverter());
        registry.addConverter(getIdToDispatcherConverter());
        registry.addConverter(getStringToDispatcherConverter());
        registry.addConverter(getNetModuleToStringConverter());
        registry.addConverter(getIdToNetModuleConverter());
        registry.addConverter(getStringToNetModuleConverter());
        registry.addConverter(getNetSwitchToStringConverter());
        registry.addConverter(getIdToNetSwitchConverter());
        registry.addConverter(getStringToNetSwitchConverter());
        registry.addConverter(getOutletToStringConverter());
        registry.addConverter(getIdToOutletConverter());
        registry.addConverter(getStringToOutletConverter());
        registry.addConverter(getPortToStringConverter());
        registry.addConverter(getIdToPortConverter());
        registry.addConverter(getStringToPortConverter());
        registry.addConverter(getRoomToStringConverter());
        registry.addConverter(getIdToRoomConverter());
        registry.addConverter(getStringToRoomConverter());
        registry.addConverter(getSondeToStringConverter());
        registry.addConverter(getIdToSondeConverter());
        registry.addConverter(getStringToSondeConverter());
        registry.addConverter(getVlanToStringConverter());
        registry.addConverter(getIdToVlanConverter());
        registry.addConverter(getStringToVlanConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
